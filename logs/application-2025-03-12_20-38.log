2025-03-12 20:38:16 INFO  [main] io.ktor.server.Application - Autoreload is disabled because the development mode is off.
2025-03-12 20:38:16 INFO  [main] [Koin] - Started 6 definitions in 1.2516 ms
2025-03-12 20:38:26 INFO  [main] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.ktorm.database.Database']': org.postgresql.util.PSQLException: Ошибка при попытке подсоединения.
	org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)
	org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	org.postgresql.Driver.makeConnection(Driver.java:446)
	org.postgresql.Driver.connect(Driver.java:298)
	java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
	org.ktorm.database.Database$Companion$connect$2.invoke(Database.kt:630)
	org.ktorm.database.Database$Companion$connect$2.invoke(Database.kt:630)
	org.ktorm.database.JdbcTransactionManager.newConnection(JdbcTransactionManager.kt:51)
	org.ktorm.database.Database.<init>(Database.kt:681)
	org.ktorm.database.Database.<init>(Database.kt:101)
	org.ktorm.database.Database$Companion.connect(Database.kt:629)
	org.ktorm.database.Database$Companion.connect$default(Database.kt:615)
	com.thocc.di.AppModuleKt.appModule$lambda$2$lambda$0(AppModule.kt:24)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.appModule$lambda$2$lambda$1(AppModule.kt:68)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.FrameworksKt.configureFrameworks(Frameworks.kt:40)
	com.thocc.ApplicationKt.module(Application.kt:23)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Static.call(CallerImpl.kt:106)
	kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	io.ktor.server.engine.internal.CallableUtilsKt.callFunctionWithInjection(CallableUtils.kt:120)
	io.ktor.server.engine.internal.CallableUtilsKt.executeModuleFunction(CallableUtils.kt:36)
	io.ktor.server.engine.EmbeddedServer.launchModuleByName$lambda$26(EmbeddedServerJvm.kt:355)
	io.ktor.server.engine.EmbeddedServer.avoidingDoubleStartupFor(EmbeddedServerJvm.kt:379)
	io.ktor.server.engine.EmbeddedServer.launchModuleByName(EmbeddedServerJvm.kt:354)
	io.ktor.server.engine.EmbeddedServer.instantiateAndConfigureApplication$lambda$25(EmbeddedServerJvm.kt:342)
	io.ktor.server.engine.EmbeddedServer.avoidingDoubleStartup(EmbeddedServerJvm.kt:361)
	io.ktor.server.engine.EmbeddedServer.instantiateAndConfigureApplication(EmbeddedServerJvm.kt:333)
	io.ktor.server.engine.EmbeddedServer.createApplication(EmbeddedServerJvm.kt:142)
	io.ktor.server.engine.EmbeddedServer.start(EmbeddedServerJvm.kt:272)
	com.thocc.ApplicationKt.main(Application.kt:18)
	com.thocc.ApplicationKt.main(Application.kt)
2025-03-12 20:38:26 INFO  [main] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.NewsService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.ktorm.database.Database']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.appModule$lambda$2$lambda$1(AppModule.kt:68)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.FrameworksKt.configureFrameworks(Frameworks.kt:40)
	com.thocc.ApplicationKt.module(Application.kt:23)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Static.call(CallerImpl.kt:106)
	kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	io.ktor.server.engine.internal.CallableUtilsKt.callFunctionWithInjection(CallableUtils.kt:120)
	io.ktor.server.engine.internal.CallableUtilsKt.executeModuleFunction(CallableUtils.kt:36)
	io.ktor.server.engine.EmbeddedServer.launchModuleByName$lambda$26(EmbeddedServerJvm.kt:355)
	io.ktor.server.engine.EmbeddedServer.avoidingDoubleStartupFor(EmbeddedServerJvm.kt:379)
	io.ktor.server.engine.EmbeddedServer.launchModuleByName(EmbeddedServerJvm.kt:354)
	io.ktor.server.engine.EmbeddedServer.instantiateAndConfigureApplication$lambda$25(EmbeddedServerJvm.kt:342)
	io.ktor.server.engine.EmbeddedServer.avoidingDoubleStartup(EmbeddedServerJvm.kt:361)
	io.ktor.server.engine.EmbeddedServer.instantiateAndConfigureApplication(EmbeddedServerJvm.kt:333)
	io.ktor.server.engine.EmbeddedServer.createApplication(EmbeddedServerJvm.kt:142)
	io.ktor.server.engine.EmbeddedServer.start(EmbeddedServerJvm.kt:272)
	com.thocc.ApplicationKt.main(Application.kt:18)
	com.thocc.ApplicationKt.main(Application.kt)
2025-03-12 20:38:56 INFO  [main] io.ktor.server.Application - Autoreload is disabled because the development mode is off.
2025-03-12 20:38:56 INFO  [main] [Koin] - Started 6 definitions in 0.744 ms
2025-03-12 20:38:56 INFO  [main] org.ktorm.database - Connected to jdbc:postgresql://192.168.0.105:32770/postgres, productName: PostgreSQL, productVersion: 17.4 (Debian 17.4-1.pgdg120+2), logger: org.ktorm.logging.Slf4jLoggerAdapter@4632cfc, dialect: org.ktorm.support.postgresql.PostgreSqlDialect@6e1f8469
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-2] i.k.server.application.Application - geekhack checker background job started!
2025-03-12 20:38:56 INFO  [main] io.ktor.server.Application - Application started in 1.003 seconds.
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] i.k.server.application.Application - zfrontier checker background job started!
2025-03-12 20:38:56 TRACE [DefaultDispatcher-worker-2] i.k.c.p.c.ContentNegotiation - Adding Accept=application header for https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
2025-03-12 20:38:56 TRACE [DefaultDispatcher-worker-2] i.k.c.p.c.ContentNegotiation - Adding Accept=application header for https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
2025-03-12 20:38:56 TRACE [DefaultDispatcher-worker-2] i.k.c.p.c.ContentNegotiation - Body type class io.ktor.client.utils.EmptyContent is in ignored types. Skipping ContentNegotiation for https://geekhack.org/index.php?board=132.0;action=.xml;type=rss.
2025-03-12 20:38:56 TRACE [DefaultDispatcher-worker-2] i.ktor.client.plugins.HttpPlainText - Adding Accept-Charset=UTF-8 to https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:56 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-1] io.ktor.client.HttpClient - REQUEST: https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
METHOD: HttpMethod(value=GET)
BODY Content-Type: null
BODY START

BODY END
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:57 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:57 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:58 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-2] i.k.client.plugins.HttpCallValidator - Validating response for request https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-2] i.k.c.p.DefaultResponseValidation - Skipping default response validation for https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-1] io.ktor.client.HttpClient - RESPONSE: 200 OK
METHOD: HttpMethod(value=GET)
FROM: https://geekhack.org/index.php?board=132.0;action=.xml;type=rss
BODY Content-Type: application/rss+xml; charset=ISO-8859-1
BODY START
<?xml version="1.0" encoding="ISO-8859-1"?>
<rss version="0.92" xml:lang="en-US">
	<channel>
		<title>geekhack - Interest Checks</title>
		<link>https://geekhack.org/index.php</link>
		<description><![CDATA[Live information from geekhack]]></description>
		<item>
			<title>Re: [IC]Mingding Linear switch</title>
			<link>https://geekhack.org/index.php?topic=124318.msg3201217#msg3201217</link>
			<description><![CDATA[Mingding Linear switches incorporate unique design elements inspired by Chinese culture that promise a smooth typing experience with high-quality materials and factory lubrication.]]></description>
			<category><![CDATA[Interest Checks]]></category>
			<comments>https://geekhack.org/index.php?action=post;topic=124318.0</comments>
			<pubDate>Wed, 12 Mar 2025 03:33:33 GMT</pubDate>
			<guid>https://geekhack.org/index.php?topic=124318.msg3201217#msg3201217</guid>
		</item>
		<item>
			<title>Re: [IC] Onigiri - HHKB inspired, low-profile wireless 60%</title>
			<link>https://geekhack.org/index.php?topic=123774.msg3201211#msg3201211</link>
			<description><![CDATA[Definitely interested! For the final version do you plan on having the switches visible from the side of the board? From the V1 shots it looks like the board height is a bit low, so the switches are visible.]]></description>
			<category><![CDATA[Interest Checks]]></category>
			<comments>https://geekhack.org/index.php?action=post;topic=123774.0</comments>
			<pubDate>Tue, 11 Mar 2025 22:44:08 GMT</pubDate>
			<guid>https://geekhack.org/index.php?topic=123774.msg3201211#msg3201211</guid>
		</item>
		<item>
			<title>Re: [IC] MW Jade Dragon</title>
			<link>https://geekhack.org/index.php?topic=124484.msg3201196#msg3201196</link>
			<description>
<![CDATA[Three more vendors join the project:<br /><br />UK - Prototypist<br />OCE - Toro Studios<br />MY - Mecha <br /><br /><strong>Current Vendor List</strong><br />NA - Drop<br />EU - MaxGaming<br />CA - Deskhero<br />SG - Qwertyqop<br />CN - zFrontier<br />KR - Swagkeys<br />UK - Prototypist<br />OCE - Toro Studios<br />MY - Mecha <br /><br />The pre-o...]]>
			</description>
			<category><![CDATA[Interest Checks]]></category>
			<comments>https://geekhack.org/index.php?action=post;topic=124484.0</comments>
			<pubDate>Tue, 11 Mar 2025 12:47:48 GMT</pubDate>
			<guid>https://geekhack.org/index.php?topic=124484.msg3201196#msg3201196</guid>
		</item>
		<item>
			<title>Re: [IC] Hydro 8x - Hydroxyl Lab</title>
			<link>https://geekhack.org/index.php?topic=124638.msg3201192#msg3201192</link>
			<description><![CDATA[KTechs added as regional vendor for Singapore!]]></description>
			<category><![CDATA[Interest Checks]]></category>
			<comments>https://geekhack.org/index.php?action=post;topic=124638.0</comments>
			<pubDate>Tue, 11 Mar 2025 10:36:20 GMT</pubDate>
			<guid>https://geekhack.org/index.php?topic=124638.msg3201192#msg3201192</guid>
		</item>
		<item>
			<title>Re: [IC] TOMAK79 ; Tenting Split 75% from SR Industry</title>
			<link>https://geekhack.org/index.php?topic=123699.msg3201181#msg3201181</link>
			<description>
<![CDATA[I have no involvement in this buy<br />Just like split boards. No idea whats up w it now. ]]>
			</description>
			<category><![CDATA[Interest Checks]]></category>
			<comments>https://geekhack.org/index.php?action=post;topic=123699.0</comments>
			<pubDate>Tue, 11 Mar 2025 02:56:19 GMT</pubDate>
			<guid>https://geekhack.org/index.php?topic=123699.msg3201181#msg3201181</guid>
		</item>
	</channel>
</rss>
BODY END
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-5] i.k.c.plugins.defaultTransformers - Transformed with default transformers response body for https://geekhack.org/index.php?board=132.0;action=.xml;type=rss to class kotlinx.io.Source
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-8] io.ktor.server.Application - Responding at http://127.0.0.1:7895
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-5] i.k.c.p.c.ContentNegotiation - Adding Accept=application header for https://geekhack.org/index.php?board=70.0;action=.xml;type=rss
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-5] i.k.c.p.c.ContentNegotiation - Adding Accept=application header for https://geekhack.org/index.php?board=70.0;action=.xml;type=rss
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-5] i.k.c.p.c.ContentNegotiation - Body type class io.ktor.client.utils.EmptyContent is in ignored types. Skipping ContentNegotiation for https://geekhack.org/index.php?board=70.0;action=.xml;type=rss.
2025-03-12 20:38:59 TRACE [DefaultDispatcher-worker-5] i.ktor.client.plugins.HttpPlainText - Adding Accept-Charset=UTF-8 to https://geekhack.org/index.php?board=70.0;action=.xml;type=rss
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-8] io.ktor.client.HttpClient - REQUEST: https://geekhack.org/index.php?board=70.0;action=.xml;type=rss
METHOD: HttpMethod(value=GET)
BODY Content-Type: null
BODY START

BODY END
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']': org.openqa.selenium.remote.NoSuchDriverException: geckodriver at location /usr/local/bin/geckodriver, does not exist
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.18.0', revision: 'b6bf9de7cc*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: driver.version: FirefoxDriver
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:76)
	org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
	org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:133)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:128)
	org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:113)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$12(AppModule.kt:56)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 INFO  [DefaultDispatcher-worker-3] [Koin] - * Instance creation error : could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']': org.koin.core.error.InstanceCreationException: Could not create instance for '[Singleton:'org.openqa.selenium.firefox.FirefoxDriver']'
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:57)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.AppModuleKt.seleniumModule$lambda$14$lambda$13(AppModule.kt:206)
	org.koin.core.instance.InstanceFactory.create(InstanceFactory.kt:50)
	org.koin.core.instance.SingleInstanceFactory.create(SingleInstanceFactory.kt:46)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:55)
	org.koin.core.instance.SingleInstanceFactory$get$1.invoke(SingleInstanceFactory.kt:53)
	org.koin.mp.KoinPlatformTools.synchronized(KoinPlatformTools.kt:36)
	org.koin.core.instance.SingleInstanceFactory.get(SingleInstanceFactory.kt:53)
	org.koin.core.registry.InstanceRegistry.resolveInstance$koin_core(InstanceRegistry.kt:109)
	org.koin.core.scope.Scope.resolveValue(Scope.kt:248)
	org.koin.core.scope.Scope.resolveInstance(Scope.kt:234)
	org.koin.core.scope.Scope.get(Scope.kt:213)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$$inlined$inject$default$2.invoke(ApplicationExt.kt:91)
	kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	com.thocc.di.ConfigureBackgroundJobsKt.configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:19)
	com.thocc.di.ConfigureBackgroundJobsKt.access$configureBackgroundJobs$lambda$1(ConfigureBackgroundJobs.kt:1)
	com.thocc.di.ConfigureBackgroundJobsKt$configureBackgroundJobs$2.invokeSuspend(ConfigureBackgroundJobs.kt:37)
	kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:101)
	kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:589)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:832)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:720)
	kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:707)
2025-03-12 20:38:59 ERROR [DefaultDispatcher-worker-3] i.k.server.application.Application - some error appeared in background job:Could not create instance for '[Singleton:'com.thocc.services.ZFrontierCheckerService']'
